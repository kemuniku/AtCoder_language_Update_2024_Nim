# 言語インストールスクリプト
#
# 言語をインストールするためのスクリプトをTOML形式で記述していただきます
# 各キー/値ごとにコメントで
#   キー: キー名
#   型:   そのキーに対する値の型
#   要否: そのキーが必須であるか任意であるか
#   説明: そのキーの説明
#   例:   そのキーの値として指定するものの例
# が記述してあるので、 必須 の項目については必ず記述してください
# 直後にそのキー/値の例が記述してあるので参考にしてください
#
# 実行環境は以下の通りとなっています
#
#   OS:                   Ubuntu 24.04.1
#   カレントディレクトリ: /judge
#   環境変数:             HOME=/home/runner
#                         LANG=C.UTF-8
#                         PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#                         ATCODER=1

# キー: language
# 型:   文字列
# 要否: 必須
# 説明: プログラミング言語の名前
# 例:   'C'
#       'C++'
#       'Java'
#       'Python3'
language = 'Nim'

# キー: name
# 型:   文字列
# 要否: 必須
# 説明: コンパイラ/インタプリタの名前
#       コンパイラ、インタプリタの実装名を記述してください
# 例:   'GCC'
#       'Clang'
#       'OpenJDK'
name = 'Nim'

# キー: version
# 型:   文字列
# 要否: 必須
# 説明: コンパイラ/インタプリタのバージョン番号
#       コンパイラ、インタプリタの実装バージョンを記述してください
# 例:   '14.2'
#       '18.1.8'
#       '23'
version = '2.2.4'

# キー: license
# 型:   配列
#       配列内の各要素はテーブルで、1要素が1つのライセンス
#       テーブルに記述するキー/値は以下の通り
#           キー: name
#           型:   文字列
#           要否: 必須
#           説明: ライセンス名
#           例:   'GPLv3+ with GCC Runtime Library Exception'
#                 'Apache License v2.0 with LLVM Exceptions'
#                 'GNU General Public License, version 2, with the Classpath Exception'
#
#           キー: url
#           型:   文字列
#           要否: 必須
#           説明: ライセンスが確認できるURL
#           例:   'https://gcc.gnu.org/git/?p=gcc.git;a=blob;f=COPYING3;hb=refs/heads/master'
#                 'https://github.com/llvm/llvm-project/blob/main/clang/LICENSE.TXT'
#                 'https://openjdk.org/legal/gplv2+ce.html'
# 要否: 必須
# 説明: コンパイラ/インタプリタのライセンス
#       コンパイラ、インタプリタの実装のライセンスを記述してください
#       デュアルライセンスなど、ライセンスが複数ある場合はすべて記述してください
license = [{ name = 'MIT', url = 'https://github.com/nim-lang/Nim/blob/v2.2.4/copying.txt' }]

# キー: library
# 型:   テーブル
#       テーブル内の各キー/値はライブラリ1つを表し、キーにはライブラリ名を、値はテーブル型でライブラリの詳細を記述
#       ライブラリの詳細として記述できるキー/値は以下の通り
#           キー: license
#           型:   テーブルの配列
#                 ここに記述する型/値は上記licenseと同様なのでそちらを参照
#           要否: 必須
#           説明: ライブラリのライセンス
#
#           キー: version
#           型:   文字列
#           要否: 任意
#           説明: ライブラリのバージョン番号
#       基本的にコンパイラ/インタプリタで指定するものと同じものをライブラリでも記述すること
#       バージョンに関してはコンパイラ/インタプリタと違い任意であるが、ユーザが確認できなくなるためどうしてもわからない場合などを除き記述すること
# 要否: 任意
# 説明: 追加でインストールされるライブラリ一覧
#       ここに記述されたものは言語一覧などの表示に使用されるものでありインストールなどには影響しません
#       そのためインストールスクリプトで記述されるものと一致するようにしてください
# 例:   boost = { license = [ { name = 'Boost Software License', url = 'https://www.boost.org/LICENSE_1_0.txt' } ], version = '1.86.0' }
library.neo = { license = [
    { name = 'Apache-2.0', url = 'https://github.com/andreaferretti/neo/blob/0.3.5/LICENSE' },
], version = '0.3.5' }
library.bignum_chaemon = { license = [
    { name = 'MIT', url = 'https://github.com/chaemon/bignum/blob/master/LICENSE' },
], version = '0.0.1' }
library.Nim-ACL = { license = [
    { name = 'CC0-1.0', url = 'https://github.com/zer0-star/Nim-ACL/blob/master/LICENSE' },
], version =  '0.1.0'}
library.gmp = { license = [
    { name = 'GPL-2.0-or-later', url = 'https://gmplib.org/repo/gmp-6.3/file/tip/COPYINGv2' },
    { name = 'LGPL-3.0-or-later', url = 'https://gmplib.org/repo/gmp-6.3/file/tip/COPYING.LESSERv3' },
], version =  '6.3.0'}
library.bigints = { license = [
    { name = 'MIT', url = 'https://github.com/nim-lang/bigints/blob/ca00f6da386af9ad7e3abf603c0201da6a014477/license.txt' },
], version = 'ca00f6da386af9ad7e3abf603c0201da6a014477' }
library.Arraymancer = { license = [
    { name = 'Apache-2.0', url = 'https://github.com/mratsim/Arraymancer/blob/84af537af1bc1f90229fff2b90abf5e5c1b02616/LICENSE' },
], version =  '84af537af1bc1f90229fff2b90abf5e5c1b02616' }
library.regex = { license = [
    { name = 'MIT', url = 'https://github.com/nitely/nim-regex/blob/v0.26.3/LICENSE' },
], version = '0.26.3' }
library.nimsimd = { license = [
    { name = 'MIT', url = 'https://github.com/guzba/nimsimd/blob/1.3.2/LICENSE' },
], version = '1.3.2' }
library.sat = { license = [
    { name = 'MIT', url = 'https://github.com/nim-lang/sat/blob/faf1617f44d7632ee9601ebc13887644925dcc01/LICENSE' },
], version = 'faf1617f44d7632ee9601ebc13887644925dcc01' }
library.boost = { license = [
    { name = 'BSL-1.0', url = 'https://www.boost.org/users/license.html' },
], version =  '1.88.0' }
library.Eigen = { license = [
    { name = 'MPL-2.0', url = 'https://gitlab.com/libeigen/eigen/-/blob/3.4.0/COPYING.MPL2' },
], version =  '3.4.0' }
library.fftw = { license = [
    { name = 'GPL-3.0-or-later', url = 'https://fftw.org/fftw3_doc/License-and-Copyright.html' },
], version =  '3.3.10' }
library.'AC Library' = { license = [
    { name = 'CC0-1.0', url = 'https://github.com/atcoder/ac-library/blob/v1.5.1/LICENSE' },
], version =  'v1.5.1' }
library.mpfr = { license = [
    { name = 'GPL-3.0-or-later', url = 'https://gitlab.inria.fr/mpfr/mpfr/-/raw/4.2.1/COPYING' },
    { name = 'LGPL-3.0-or-later', url = 'https://gitlab.inria.fr/mpfr/mpfr/-/raw/4.2.1/COPYING.LESSER' },
], version = '4.2.1' }
library.nimlapack = { license = [
    {name = 'Apache-2.0', url = 'https://github.com/SciNim/nimlapack/blob/v0.3.1/LICENSE' },
], indirect = true, version = '0.3.1'}
library.nimcuda = { license = [
    {name = 'Apache-2.0', url = 'https://github.com/SciNim/nimcuda/blob/v0.2.2/LICENSE' },
], indirect = true, version = '0.2.2'}
library.nimblas = { license = [
    {name = 'Apache-2.0', url = 'https://github.com/SciNim/nimblas/blob/v0.3.1/LICENSE' },
], indirect = true, version = '0.3.1'}
library.nim-gmp_chaemon = { license = [
    {name = 'MIT', url = 'https://github.com/chaemon/nim-gmp/blob/master/COPYING' },
], indirect = true, version = '0.2.6'}
library.opencl = { license = [
    {name = 'MIT', url = 'https://github.com/nim-lang/opencl/blob/v1.0.1/LICENSE' },
], indirect = true, version = '1.0.1'}
library.clblast = { license = [
    {name = 'Apache-2.0', url = 'https://github.com/mratsim/nim-clblast/blob/master/README.md' },
], indirect = true, version = '0.0.2'}
library.nimcl = { license = [
    {name = 'Apache-2.0', url = 'https://github.com/SciNim/nimcl/blob/0.1.3/LICENSE' },
], indirect = true, version = '0.1.3'}
library.zip = { license = [
    {name = 'MIT', url = 'https://github.com/nim-lang/zip/blob/0.3.1/LICENSE' },
], indirect = true, version = '0.3.1'}
library.stb_image = { license = [
    {name = 'Unlicense', url = 'https://gitlab.com/define-private-public/stb_image-Nim/-/blob/2.5/LICENSE' },
], indirect = true, version = '2.5'}
library.untar = { license = [
    {name = 'MIT', url = 'https://github.com/dom96/untar/blob/master/readme.markdown' },
], indirect = true, version = '0.1.0'}
library.unicodedb = { license = [
    {name = 'MIT', url = 'https://github.com/nitely/nim-unicodedb/blob/v0.13.2/LICENSE' },
], indirect = true, version = '0.13.2'}

# キー: filename
# 型:   文字列
# 要否: 必須
# 説明: 配置するファイル名
#       提出されたソースコードがこの名前でカレントディレクトリに作成されます
#       基本的には Main + 拡張子 で統一してください
#       ただしファイル名に意味がある場合やプロジェクトファイルを用いる場合は適切にファイルパスを指定してください
# 例:   'Main.c'
#       'Main.cpp'
#       'src/main.rs'
filename = 'Main.nim'

# キー: install
# 型:   文字列
# 要否: 必須
# 説明: インストールスクリプト
#       このスクリプトでは言語環境のイメージを作成するために使用されます
#       そのためコンパイラ/インタプリタやライブラリのインストールだけでなく、プロジェクトの生成やプリコンパイルといった、提出によらずにすべてで行うべき工程はこのインストールスクリプトで行ってください
#       ネットワークアクセスができるのはこのタイミングだけです
#       後述のコンパイルスクリプト、および実行コマンドではネットワークアクセスができないため、必要なファイルがインターネットにある場合はこのスクリプトでダウンロードを行っておいてください
#
#       ここで記述されたスクリプトはbashに渡されて実行されます
#       シェル変数などは通常通り使用可能ですが、コンパイルスクリプト、実行コマンドには引き継がれないので注意してください
#       コンパイルスクリプトにおいては同様にbashで実行されるため、同じ内容を記述してください
#       実行コマンドはシェルを介さず直接起動されるため、環境変数の修正が必要な場合は後述のenvironmentを使用してください
#
#       またイメージを最小化するために、インストール作業には必要だが最終成果物として不要なものは /tmp においてください
#       インストールスクリプトが終了したあとで /tmp 以下のものは削除されます

install = '''
cd /tmp
sudo ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime && sudo bash -c 'echo Etc/UTC > /etc/timezone'
sudo apt update && sudo apt install -y bzip2 curl xz-utils g++ git
sudo apt install -y lsb-release wget software-properties-common gnupg
wget https://apt.llvm.org/llvm.sh
chmod +x llvm.sh
sudo ./llvm.sh 20 all
sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 1
sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-20 1
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
export CHOOSENIM_CHOOSE_VERSION=2.2.4
curl https://nim-lang.org/choosenim/init.sh -sSf | bash -s -- -y
export PATH=$HOME/.nimble/bin:$PATH
sudo apt install libopenblas-dev liblapack-dev -y
nimble install neo@0.3.5 -y
nimble install https://github.com/zer0-star/Nim-ACL@0.1.0 -y
sudo apt install -y libgmp3-dev
nimble install https://github.com/chaemon/bignum@0.0.1 -y
nimble install https://github.com/nim-lang/bigints@#ca00f6da386af9ad7e3abf603c0201da6a014477 -y
nimble install arraymancer@#84af537af1bc1f90229fff2b90abf5e5c1b02616 -y
nimble install regex@0.26.3 -y
nimble install nimsimd@1.3.2 -y
nimble install https://github.com/nim-lang/sat@#faf1617f44d7632ee9601ebc13887644925dcc01 -y
sudo apt install -y python3-dev
wget https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz
tar -xf boost_1_88_0.tar.gz
cd boost_1_88_0
./bootstrap.sh --without-libraries=mpi,graph_parallel
sudo ./b2 install
sudo ldconfig
cd /tmp
sudo apt install -y libfftw3-dev
wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
tar -xvf eigen-3.4.0.tar.gz
cd eigen-3.4.0
sudo cp -r Eigen/ unsupported/ /usr/local/include/
cd /tmp
wget https://github.com/atcoder/ac-library/archive/refs/tags/v1.5.1.tar.gz
tar -xvf v1.5.1.tar.gz
sudo cp -r ac-library-1.5.1/atcoder /usr/local/include
sudo apt install -y libmpfr-dev
'''

# キー: compile
# 型:   文字列
# 要否: 任意
# 説明: コンパイルスクリプト
#       コンパイルを行う言語の場合はコンパイルコマンドを記入してください
#
#       ここで記述されたスクリプトはbashに渡されて実行されます
#       シェル変数などは通常通り使用可能ですが、実行コマンドには引き継がれないので注意してください
#       実行コマンドはシェルを介さず直接起動されるため、環境変数の修正が必要な場合は後述のenvironmentを使用してください
#
#       コンパイルを行わない言語の場合は記述不要です
#       ただしコンパイルを行う必要のない言語の場合でも、構文チェックなどをコンパイル代わりに行わせることが可能です
#       成功時に後述の object で指定するファイルが生成されるようにコマンドを記述してください
compile = '''
export PATH=$HOME/.nimble/bin:$PATH
nim cpp -d:release --opt:speed --multimethods:on --warning[SmallLshouldNotBeUsed]:off --hints:off --maxLoopIterationsVM:10000000000000 --maxCallDepthVM:10000000000000 -o:a.out Main.nim 
'''

# キー: object
# 型:   文字列
# 要否: 任意
# 説明: コンパイル成否を判断するためのファイルパス
#       コンパイルが成功したかどうかの判定に行うファイルを/judgeからの相対パスで記入してください
#       コンパイルの成否はこのファイルの存在で判定を行います
#       コンパイラの出力内容や、コンパイラの終了コードでは判定を行いませんので注意してください
#       またこの仕様を用いて、インタプリタ言語で構文チェックなどを行うことが可能です
#       例えばコンパイルコマンドとして構文チェックを行い、その成否に応じてここで指定するファイルを生成する/しないを行えば、インタプリタ言語でもコンパイルエラーで実行を中断させることが可能です
# 例:   'a.out'
#       'publish/Main'
#       'target/release/main'
object = 'a.out'

# キー: environment
# 型:   テーブル
#       テーブル内の各キー/値は環境変数1つを表し、キーには環境変数名を、値は文字列型で環境変数の内容を記述
# 要否: 任意
# 説明: 実行時の環境変数
#       実行はシェルを介さず直接実行されるためシェルと同じ方法では環境変数を設定できません
#       そのため環境変数を修正する場合はenvironmentテーブル内にキー/値を記述してください
#
#       デフォルトでは以下の環境変数が設定されています
#           environment.PATH    = '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
#           environment.HOME    = '/home/runner'
#           environment.LANG    = 'C.UTF-8'
#           environment.ATCODER = '1'
#
#       ここで指定する環境変数は実行時のみ影響するものです
#       インストールスクリプト、コンパイルスクリプトには影響しません
#       それぞれで環境変数を変更する場合はそれぞれのスクリプト内で直接変更するようにしてください
#
#       また以下の文字列は実行直前にジャッジシステムによって置換されます:
#           {memory:b}     問題のメモリ制限の数値（単位: バイト）
#           {memory:kb}    問題のメモリ制限の数値（単位: KiB）
#           {memory:mb}    問題のメモリ制限の数値（単位: MiB）
#       インタプリタ言語など、環境変数によって実行環境の設定を行う場合に使用できます


# キー: execution
# 型:   配列
#       配列内の各要素は文字列で、実行コマンドとして渡される各引数
# 要否: 任意
# 説明: 実行コマンド
#       実行を行うときのコマンドを配列で指定してください
#       実行はオーバーヘッドを取り除くためにシェルなどを使わずに直接起動させます
#       そのためシェルの構文などは一切使えません
#       ただし以下の文字列は実行直前にジャッジシステムによって置換されます:
#           {memory:b}     問題のメモリ制限の数値（単位: バイト）
#           {memory:kb}    問題のメモリ制限の数値（単位: KiB）
#           {memory:mb}    問題のメモリ制限の数値（単位: MiB）
#       インタプリタ言語など、実行環境の設定を行う場合に使用できます
# 例:   [ './a.out' ]
#       [ './target/release/main' ]
#       [ 'java', '-Xss{memory:mb}M', 'Main' ]
execution = [
    './a.out'
]
